{% macro render_password_field(label, name, options={}) %}

  {% set merged_options = { 'classes': '', 'input_classes': '', 'has_autofocus': false } %}
  {# I just need to call `.update` but I have to have some kind of expression. So I am using `set`. #}
  {% set _ = merged_options.update(options) %}
  {% set options = merged_options %}

  <div class="password-field field {{ options.classes }}" x-data="password_field">

    <label class="label">{{ label }}</label>

    <div class="control has-icons-right">

      <input
        class="password-field__input input {{ options.input_classes }}"
        :type="isVisible ? 'text' : 'password'"
        name="{{ name }}"
        required
        {{ 'autofocus' if options.has_autofocus }} />

      <button
        class="password-field__visibility-toggle button is-ghost icon is-right is-small"
        type="button"
        @click="toggleVisibility()">
        <i
          x-show="isVisible"
          class="fa-solid fa-eye-slash"></i>
        <i
          x-show="!isVisible"
          class="fa-solid fa-eye"></i>
      </button>

    </div>

  </div>
{% endmacro %}
